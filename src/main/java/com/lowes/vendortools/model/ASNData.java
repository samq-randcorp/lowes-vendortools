/*
 * ASN Service
 * This app provides REST APIs for ASN Service
 *
 * OpenAPI spec version: v3
 * Contact: firstname.lastname@company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lowes.vendortools.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lowes.vendortools.model.Delivery;
import com.lowes.vendortools.model.FreightMovement;

import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ASNData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-03T04:59:55.167Z[GMT]")
public class ASNData {
  @SerializedName("loadId")
  private String loadId = null;

  @SerializedName("shipperNodeNumber")
  private Long shipperNodeNumber = null;

  @SerializedName("shipperNodeName")
  private String shipperNodeName = null;

  @SerializedName("shipperNodeType")
  private String shipperNodeType = null;

  @SerializedName("primaryEquipmentType")
  private String primaryEquipmentType = null;

  @SerializedName("primaryEquipmentId")
  private String primaryEquipmentId = null;

  @SerializedName("primaryEquipmentCarrierSCAC")
  private String primaryEquipmentCarrierSCAC = null;

  @SerializedName("estimatedToActualShipTimestamp")
  private String estimatedToActualShipTimestamp = null;

  @SerializedName("loadStatus")
  private String loadStatus = null;

  @SerializedName("freightMovement")
  private List<FreightMovement> freightMovement = null;

  @SerializedName("delivery")
  private List<Delivery> delivery = null;

  @SerializedName("revisionNumber")
  private Long revisionNumber = null;

  @SerializedName("requiredShipTimestamp")
  private String requiredShipTimestamp = null;

  public ASNData loadId(String loadId) {
    this.loadId = loadId;
    return this;
  }

   /**
   * Get loadId
   * @return loadId
  **/
  @Schema(description = "")
  public String getLoadId() {
    return loadId;
  }

  public void setLoadId(String loadId) {
    this.loadId = loadId;
  }

  public ASNData shipperNodeNumber(Long shipperNodeNumber) {
    this.shipperNodeNumber = shipperNodeNumber;
    return this;
  }

   /**
   * Get shipperNodeNumber
   * minimum: 1
   * @return shipperNodeNumber
  **/
  @Schema(required = true, description = "")
  public Long getShipperNodeNumber() {
    return shipperNodeNumber;
  }

  public void setShipperNodeNumber(Long shipperNodeNumber) {
    this.shipperNodeNumber = shipperNodeNumber;
  }

  public ASNData shipperNodeName(String shipperNodeName) {
    this.shipperNodeName = shipperNodeName;
    return this;
  }

   /**
   * Get shipperNodeName
   * @return shipperNodeName
  **/
  @Schema(description = "")
  public String getShipperNodeName() {
    return shipperNodeName;
  }

  public void setShipperNodeName(String shipperNodeName) {
    this.shipperNodeName = shipperNodeName;
  }

  public ASNData shipperNodeType(String shipperNodeType) {
    this.shipperNodeType = shipperNodeType;
    return this;
  }

   /**
   * Get shipperNodeType
   * @return shipperNodeType
  **/
  @Schema(description = "")
  public String getShipperNodeType() {
    return shipperNodeType;
  }

  public void setShipperNodeType(String shipperNodeType) {
    this.shipperNodeType = shipperNodeType;
  }

  public ASNData primaryEquipmentType(String primaryEquipmentType) {
    this.primaryEquipmentType = primaryEquipmentType;
    return this;
  }

   /**
   * Get primaryEquipmentType
   * @return primaryEquipmentType
  **/
  @Schema(description = "")
  public String getPrimaryEquipmentType() {
    return primaryEquipmentType;
  }

  public void setPrimaryEquipmentType(String primaryEquipmentType) {
    this.primaryEquipmentType = primaryEquipmentType;
  }

  public ASNData primaryEquipmentId(String primaryEquipmentId) {
    this.primaryEquipmentId = primaryEquipmentId;
    return this;
  }

   /**
   * Get primaryEquipmentId
   * @return primaryEquipmentId
  **/
  @Schema(description = "")
  public String getPrimaryEquipmentId() {
    return primaryEquipmentId;
  }

  public void setPrimaryEquipmentId(String primaryEquipmentId) {
    this.primaryEquipmentId = primaryEquipmentId;
  }

  public ASNData primaryEquipmentCarrierSCAC(String primaryEquipmentCarrierSCAC) {
    this.primaryEquipmentCarrierSCAC = primaryEquipmentCarrierSCAC;
    return this;
  }

   /**
   * Get primaryEquipmentCarrierSCAC
   * @return primaryEquipmentCarrierSCAC
  **/
  @Schema(description = "")
  public String getPrimaryEquipmentCarrierSCAC() {
    return primaryEquipmentCarrierSCAC;
  }

  public void setPrimaryEquipmentCarrierSCAC(String primaryEquipmentCarrierSCAC) {
    this.primaryEquipmentCarrierSCAC = primaryEquipmentCarrierSCAC;
  }

  public ASNData estimatedToActualShipTimestamp(String estimatedToActualShipTimestamp) {
    this.estimatedToActualShipTimestamp = estimatedToActualShipTimestamp;
    return this;
  }

   /**
   * Get estimatedToActualShipTimestamp
   * @return estimatedToActualShipTimestamp
  **/
  @Schema(description = "")
  public String getEstimatedToActualShipTimestamp() {
    return estimatedToActualShipTimestamp;
  }

  public void setEstimatedToActualShipTimestamp(String estimatedToActualShipTimestamp) {
    this.estimatedToActualShipTimestamp = estimatedToActualShipTimestamp;
  }

  public ASNData loadStatus(String loadStatus) {
    this.loadStatus = loadStatus;
    return this;
  }

   /**
   * Get loadStatus
   * @return loadStatus
  **/
  @Schema(description = "")
  public String getLoadStatus() {
    return loadStatus;
  }

  public void setLoadStatus(String loadStatus) {
    this.loadStatus = loadStatus;
  }

  public ASNData freightMovement(List<FreightMovement> freightMovement) {
    this.freightMovement = freightMovement;
    return this;
  }

  public ASNData addFreightMovementItem(FreightMovement freightMovementItem) {
    if (this.freightMovement == null) {
      this.freightMovement = new ArrayList<FreightMovement>();
    }
    this.freightMovement.add(freightMovementItem);
    return this;
  }

   /**
   * Get freightMovement
   * @return freightMovement
  **/
  @Schema(description = "")
  public List<FreightMovement> getFreightMovement() {
    return freightMovement;
  }

  public void setFreightMovement(List<FreightMovement> freightMovement) {
    this.freightMovement = freightMovement;
  }

  public ASNData delivery(List<Delivery> delivery) {
    this.delivery = delivery;
    return this;
  }

  public ASNData addDeliveryItem(Delivery deliveryItem) {
    if (this.delivery == null) {
      this.delivery = new ArrayList<Delivery>();
    }
    this.delivery.add(deliveryItem);
    return this;
  }

   /**
   * Get delivery
   * @return delivery
  **/
  @Schema(description = "")
  public List<Delivery> getDelivery() {
    return delivery;
  }

  public void setDelivery(List<Delivery> delivery) {
    this.delivery = delivery;
  }

  public ASNData revisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
    return this;
  }

   /**
   * Get revisionNumber
   * @return revisionNumber
  **/
  @Schema(description = "")
  public Long getRevisionNumber() {
    return revisionNumber;
  }

  public void setRevisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
  }

  public ASNData requiredShipTimestamp(String requiredShipTimestamp) {
    this.requiredShipTimestamp = requiredShipTimestamp;
    return this;
  }

   /**
   * Get requiredShipTimestamp
   * @return requiredShipTimestamp
  **/
  @Schema(description = "")
  public String getRequiredShipTimestamp() {
    return requiredShipTimestamp;
  }

  public void setRequiredShipTimestamp(String requiredShipTimestamp) {
    this.requiredShipTimestamp = requiredShipTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ASNData asNData = (ASNData) o;
    return Objects.equals(this.loadId, asNData.loadId) &&
        Objects.equals(this.shipperNodeNumber, asNData.shipperNodeNumber) &&
        Objects.equals(this.shipperNodeName, asNData.shipperNodeName) &&
        Objects.equals(this.shipperNodeType, asNData.shipperNodeType) &&
        Objects.equals(this.primaryEquipmentType, asNData.primaryEquipmentType) &&
        Objects.equals(this.primaryEquipmentId, asNData.primaryEquipmentId) &&
        Objects.equals(this.primaryEquipmentCarrierSCAC, asNData.primaryEquipmentCarrierSCAC) &&
        Objects.equals(this.estimatedToActualShipTimestamp, asNData.estimatedToActualShipTimestamp) &&
        Objects.equals(this.loadStatus, asNData.loadStatus) &&
        Objects.equals(this.freightMovement, asNData.freightMovement) &&
        Objects.equals(this.delivery, asNData.delivery) &&
        Objects.equals(this.revisionNumber, asNData.revisionNumber) &&
        Objects.equals(this.requiredShipTimestamp, asNData.requiredShipTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loadId, shipperNodeNumber, shipperNodeName, shipperNodeType, primaryEquipmentType, primaryEquipmentId, primaryEquipmentCarrierSCAC, estimatedToActualShipTimestamp, loadStatus, freightMovement, delivery, revisionNumber, requiredShipTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ASNData {\n");
    
    sb.append("    loadId: ").append(toIndentedString(loadId)).append("\n");
    sb.append("    shipperNodeNumber: ").append(toIndentedString(shipperNodeNumber)).append("\n");
    sb.append("    shipperNodeName: ").append(toIndentedString(shipperNodeName)).append("\n");
    sb.append("    shipperNodeType: ").append(toIndentedString(shipperNodeType)).append("\n");
    sb.append("    primaryEquipmentType: ").append(toIndentedString(primaryEquipmentType)).append("\n");
    sb.append("    primaryEquipmentId: ").append(toIndentedString(primaryEquipmentId)).append("\n");
    sb.append("    primaryEquipmentCarrierSCAC: ").append(toIndentedString(primaryEquipmentCarrierSCAC)).append("\n");
    sb.append("    estimatedToActualShipTimestamp: ").append(toIndentedString(estimatedToActualShipTimestamp)).append("\n");
    sb.append("    loadStatus: ").append(toIndentedString(loadStatus)).append("\n");
    sb.append("    freightMovement: ").append(toIndentedString(freightMovement)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    requiredShipTimestamp: ").append(toIndentedString(requiredShipTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
