/*
 * ASN Service
 * This app provides REST APIs for ASN Service
 *
 * OpenAPI spec version: v3
 * Contact: firstname.lastname@company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AsnUtilityControllerApi
 */
@Ignore
public class AsnUtilityControllerApiTest {

    private final AsnUtilityControllerApi api = new AsnUtilityControllerApi();

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getASNValidatedByTypeOfASNTest() throws ApiException {
        String typeOfASN = null;
        api.getASNValidatedByTypeOfASN(typeOfASN);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFailedASNTest() throws ApiException {
        Map<String, Object> body = null;
        api.getFailedASN(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFailedASNByLoadIdTest() throws ApiException {
        String loadId = null;
        api.getFailedASNByLoadId(loadId);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFailedASNByOrderNumberTest() throws ApiException {
        String orderNumber = null;
        api.getFailedASNByOrderNumber(orderNumber);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void missingValidatedASNTest() throws ApiException {
        api.missingValidatedASN();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void missingValidatedASNByLoadIdTest() throws ApiException {
        api.missingValidatedASNByLoadId();

        // TODO: test validations
    }
    /**
     * Publish Failed ASN to Kafka Topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publishFailedASNToKafkaTopicTest() throws ApiException {
        String response = api.publishFailedASNToKafkaTopic();

        // TODO: test validations
    }
    /**
     * Publish Failed ASN to Kafka Topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publishFailedASNToKafkaTopicByLoadIdTest() throws ApiException {
        String loadId = null;
        String response = api.publishFailedASNToKafkaTopicByLoadId(loadId);

        // TODO: test validations
    }
    /**
     * Publish Failed ASN to Kafka Topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publishFailedASNToKafkaTopicByNodeTypeTest() throws ApiException {
        String nodeType = null;
        String response = api.publishFailedASNToKafkaTopicByNodeType(nodeType);

        // TODO: test validations
    }
    /**
     * Publish Failed ASN to Kafka Topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publishFailedASNToKafkaTopicByOrderNumberTest() throws ApiException {
        String orderNumber = null;
        String response = api.publishFailedASNToKafkaTopicByOrderNumber(orderNumber);

        // TODO: test validations
    }
}
